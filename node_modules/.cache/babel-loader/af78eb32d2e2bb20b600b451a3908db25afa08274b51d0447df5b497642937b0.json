{"ast":null,"code":"var _jsxFileName = \"/Users/yeorin/Desktop/Findit-main/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [mediaItems, setMediaItems] = useState([]);\n  const [selectedMedia, setSelectedMedia] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const imageRef = useRef(null);\n  const [detectedObjects, setDetectedObjects] = useState([]);\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      setIsProcessing(true);\n      setError(null);\n      const url = URL.createObjectURL(file);\n      const type = file.type.startsWith('video/') ? 'video' : 'image';\n      const formData = new FormData();\n      formData.append(type, file);\n      try {\n        const response = await fetch(`http://localhost:5001/upload${type === 'image' ? '-image' : ''}`, {\n          method: 'POST',\n          body: formData\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          throw new Error(data.error || 'Upload failed');\n        }\n        const newMediaItem = {\n          id: Date.now().toString(),\n          type,\n          url,\n          file,\n          textBoxes: data.textBoxes,\n          subtitles: data.subtitles\n        };\n        setMediaItems(prev => [...prev, newMediaItem]);\n        setSelectedMedia(newMediaItem);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setError(error instanceof Error ? error.message : 'Error uploading file. Please try again.');\n      } finally {\n        setIsProcessing(false);\n      }\n    }\n  };\n  const handleSearch = async mode => {\n    if (!searchTerm || searchTerm.trim() === '' || !selectedMedia) {\n      setSearchResults([]);\n      setDetectedObjects([]);\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('image', selectedMedia.file);\n      formData.append('query', searchTerm);\n      formData.append('mode', mode);\n      const response = await fetch('http://localhost:5001/analyze-image', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || '분석 실패');\n      }\n      setDetectedObjects(data.objects || []);\n    } catch (error) {\n      console.error('이미지 분석 오류:', error);\n      setError(error instanceof Error ? error.message : '이미지 분석 중 오류가 발생했습니다');\n    }\n  };\n  const handleMediaClick = media => {\n    setSelectedMedia(media);\n    setSearchTerm('');\n    setSearchResults([]);\n  };\n  const handleTimestampClick = timestamp => {\n    const video = document.querySelector('video');\n    if (video) {\n      video.currentTime = timestamp;\n      video.play();\n    }\n  };\n  const handleImageClick = event => {\n    if (!imageRef.current || !(selectedMedia !== null && selectedMedia !== void 0 && selectedMedia.textBoxes)) return;\n    const rect = imageRef.current.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const clickedTextBox = selectedMedia.textBoxes.find(box => {\n      const scaleX = rect.width / imageRef.current.naturalWidth;\n      const scaleY = rect.height / imageRef.current.naturalHeight;\n      const scaledX1 = box.bbox.x1 * scaleX;\n      const scaledY1 = box.bbox.y1 * scaleY;\n      const scaledX2 = box.bbox.x2 * scaleX;\n      const scaledY2 = box.bbox.y2 * scaleY;\n      return x >= scaledX1 && x <= scaledX2 && y >= scaledY1 && y <= scaledY2;\n    });\n    if (clickedTextBox) {\n      setSearchTerm(clickedTextBox.text);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              handleSearch('normal');\n            }\n          },\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSearch('normal'),\n            className: \"search-button\",\n            children: \"\\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSearch('smart'),\n            className: \"search-button smart\",\n            children: \"\\uC2A4\\uB9C8\\uD2B8 \\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileUpload,\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uBE44\\uB514\\uC624 \\uC5C5\\uB85C\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"video/*\",\n            onChange: handleFileUpload,\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 26\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), selectedMedia && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-media\",\n      children: selectedMedia.type === 'video' ? /*#__PURE__*/_jsxDEV(\"video\", {\n        src: selectedMedia.url,\n        controls: true,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedMedia.url,\n          alt: \"Selected\",\n          style: {\n            maxWidth: '100%',\n            maxHeight: '400px'\n          },\n          onLoad: e => {\n            const img = e.target;\n            console.log('Image loaded with size:', img.naturalWidth, 'x', img.naturalHeight);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), detectedObjects.map((obj, index) => {\n          const img = document.querySelector('.selected-media img');\n          if (!img) return null;\n          const rect = img.getBoundingClientRect();\n          const scaleX = rect.width / img.naturalWidth;\n          const scaleY = rect.height / img.naturalHeight;\n\n          // 신뢰도에 따라 색상 결정\n          const confidence = obj.confidence || 0;\n          const highlightColor = confidence > 0.8 ? 'rgba(0, 255, 0, 0.3)' : 'rgba(255, 255, 0, 0.3)';\n          const borderColor = confidence > 0.8 ? 'green' : 'yellow';\n          const labelBgColor = confidence > 0.8 ? 'green' : 'yellow';\n          console.log(`Drawing box for: ${obj.label}`, {\n            original: obj.bbox,\n            scaled: {\n              x1: obj.bbox.x1 * scaleX,\n              y1: obj.bbox.y1 * scaleY,\n              x2: obj.bbox.x2 * scaleX,\n              y2: obj.bbox.y2 * scaleY\n            },\n            confidence: confidence\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              left: `${obj.bbox.x1 * scaleX}px`,\n              top: `${obj.bbox.y1 * scaleY}px`,\n              width: `${(obj.bbox.x2 - obj.bbox.x1) * scaleX}px`,\n              height: `${(obj.bbox.y2 - obj.bbox.y1) * scaleY}px`,\n              border: `2px solid ${borderColor}`,\n              backgroundColor: highlightColor,\n              pointerEvents: 'none',\n              zIndex: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                top: '-20px',\n                left: '0',\n                backgroundColor: labelBgColor,\n                color: 'white',\n                padding: '2px 5px',\n                fontSize: '12px',\n                borderRadius: '3px'\n              },\n              children: obj.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), mediaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-grid\",\n      children: mediaItems.map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `media-item ${(selectedMedia === null || selectedMedia === void 0 ? void 0 : selectedMedia.id) === media.id ? 'selected' : ''}`,\n        onClick: () => handleMediaClick(media),\n        children: media.type === 'video' ? /*#__PURE__*/_jsxDEV(\"video\", {\n          src: media.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: media.url,\n          alt: \"Uploaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }, this)\n      }, media.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kpPkxCLelyb8kQwhdRUhFA3a/7M=\");\n_c = App;\nconst formatTime = seconds => {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","mediaItems","setMediaItems","selectedMedia","setSelectedMedia","searchTerm","setSearchTerm","searchResults","setSearchResults","isProcessing","setIsProcessing","error","setError","imageRef","detectedObjects","setDetectedObjects","handleFileUpload","event","_event$target$files","file","target","files","url","URL","createObjectURL","type","startsWith","formData","FormData","append","response","fetch","method","body","data","json","ok","Error","newMediaItem","id","Date","now","toString","textBoxes","subtitles","prev","console","message","handleSearch","mode","trim","objects","handleMediaClick","media","handleTimestampClick","timestamp","video","document","querySelector","currentTime","play","handleImageClick","current","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","clickedTextBox","find","box","scaleX","width","naturalWidth","scaleY","height","naturalHeight","scaledX1","bbox","x1","scaledY1","y1","scaledX2","x2","scaledY2","y2","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","onKeyPress","key","onClick","accept","src","controls","style","maxWidth","maxHeight","position","alt","onLoad","img","log","map","obj","index","confidence","highlightColor","borderColor","labelBgColor","label","original","scaled","border","backgroundColor","pointerEvents","zIndex","color","padding","fontSize","borderRadius","length","_c","formatTime","seconds","minutes","Math","floor","remainingSeconds","padStart","$RefreshReg$"],"sources":["/Users/yeorin/Desktop/Findit-main/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport VideoPlayer from './components/VideoPlayer';\nimport './App.css';\n\ninterface Subtitle {\n  text: string;\n  startTime: number;\n  endTime: number;\n}\n\ninterface TextBox {\n  text: string;\n  confidence: number;\n  bbox: {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n  };\n}\n\ninterface MediaItem {\n  id: string;\n  type: 'video' | 'image';\n  url: string;\n  file: File;\n  textBoxes?: TextBox[];\n  subtitles?: Subtitle[];\n}\n\ninterface DetectedObject {\n  label: string;\n  bbox: {\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n  };\n  confidence?: number;\n}\n\nconst App: React.FC = () => {\n  const [mediaItems, setMediaItems] = useState<MediaItem[]>([]);\n  const [selectedMedia, setSelectedMedia] = useState<MediaItem | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<Subtitle[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n  const [detectedObjects, setDetectedObjects] = useState<DetectedObject[]>([]);\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setIsProcessing(true);\n      setError(null);\n      const url = URL.createObjectURL(file);\n      const type = file.type.startsWith('video/') ? 'video' : 'image';\n\n      const formData = new FormData();\n      formData.append(type, file);\n\n      try {\n        const response = await fetch(`http://localhost:5001/upload${type === 'image' ? '-image' : ''}`, {\n          method: 'POST',\n          body: formData,\n        });\n\n        const data = await response.json();\n\n        if (!response.ok) {\n          throw new Error(data.error || 'Upload failed');\n        }\n\n        const newMediaItem: MediaItem = {\n          id: Date.now().toString(),\n          type,\n          url,\n          file,\n          textBoxes: data.textBoxes,\n          subtitles: data.subtitles\n        };\n\n        setMediaItems(prev => [...prev, newMediaItem]);\n        setSelectedMedia(newMediaItem);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setError(error instanceof Error ? error.message : 'Error uploading file. Please try again.');\n      } finally {\n        setIsProcessing(false);\n      }\n    }\n  };\n\n  const handleSearch = async (mode: 'normal' | 'smart') => {\n    if (!searchTerm || searchTerm.trim() === '' || !selectedMedia) {\n      setSearchResults([]);\n      setDetectedObjects([]);\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('image', selectedMedia.file);\n      formData.append('query', searchTerm);\n      formData.append('mode', mode);\n\n      const response = await fetch('http://localhost:5001/analyze-image', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || '분석 실패');\n      }\n\n      setDetectedObjects(data.objects || []);\n    } catch (error) {\n      console.error('이미지 분석 오류:', error);\n      setError(error instanceof Error ? error.message : '이미지 분석 중 오류가 발생했습니다');\n    }\n  };\n\n  const handleMediaClick = (media: MediaItem) => {\n    setSelectedMedia(media);\n    setSearchTerm('');\n    setSearchResults([]);\n  };\n\n  const handleTimestampClick = (timestamp: number) => {\n    const video = document.querySelector('video');\n    if (video) {\n      video.currentTime = timestamp;\n      video.play();\n    }\n  };\n\n  const handleImageClick = (event: React.MouseEvent<HTMLImageElement>) => {\n    if (!imageRef.current || !selectedMedia?.textBoxes) return;\n    \n    const rect = imageRef.current.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    const clickedTextBox = selectedMedia.textBoxes.find(box => {\n      const scaleX = rect.width / imageRef.current!.naturalWidth;\n      const scaleY = rect.height / imageRef.current!.naturalHeight;\n      \n      const scaledX1 = box.bbox.x1 * scaleX;\n      const scaledY1 = box.bbox.y1 * scaleY;\n      const scaledX2 = box.bbox.x2 * scaleX;\n      const scaledY2 = box.bbox.y2 * scaleY;\n      \n      return x >= scaledX1 && x <= scaledX2 && y >= scaledY1 && y <= scaledY2;\n    });\n    \n    if (clickedTextBox) {\n      setSearchTerm(clickedTextBox.text);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>찾기</h1>\n      \n      <div className=\"search-section\">\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"검색어를 입력하세요...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                handleSearch('normal');\n              }\n            }}\n            className=\"search-input\"\n          />\n          <div className=\"search-buttons\">\n            <button \n              onClick={() => handleSearch('normal')}\n              className=\"search-button\"\n            >\n              검색\n            </button>\n            <button \n              onClick={() => handleSearch('smart')}\n              className=\"search-button smart\"\n            >\n              스마트 검색\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"upload-section\">\n        <div className=\"upload-options\">\n          <div className=\"upload-option\">\n            <h3>이미지 업로드</h3>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleFileUpload}\n              className=\"file-input\"\n            />\n          </div>\n          <div className=\"upload-option\">\n            <h3>비디오 업로드</h3>\n            <input\n              type=\"file\"\n              accept=\"video/*\"\n              onChange={handleFileUpload}\n              className=\"file-input\"\n            />\n          </div>\n        </div>\n        {isProcessing && <p>Processing...</p>}\n        {error && <p className=\"error\">{error}</p>}\n      </div>\n\n      {selectedMedia && (\n        <div className=\"selected-media\">\n          {selectedMedia.type === 'video' ? (\n            <video \n              src={selectedMedia.url} \n              controls \n              style={{ maxWidth: '100%', maxHeight: '400px' }}\n            />\n          ) : (\n            <div style={{ position: 'relative' }}>\n              <img \n                src={selectedMedia.url} \n                alt=\"Selected\" \n                style={{ maxWidth: '100%', maxHeight: '400px' }}\n                onLoad={(e) => {\n                  const img = e.target as HTMLImageElement;\n                  console.log('Image loaded with size:', img.naturalWidth, 'x', img.naturalHeight);\n                }}\n              />\n              {detectedObjects.map((obj, index) => {\n                const img = document.querySelector('.selected-media img') as HTMLImageElement;\n                if (!img) return null;\n                \n                const rect = img.getBoundingClientRect();\n                const scaleX = rect.width / img.naturalWidth;\n                const scaleY = rect.height / img.naturalHeight;\n                \n                // 신뢰도에 따라 색상 결정\n                const confidence = obj.confidence || 0;\n                const highlightColor = confidence > 0.8 ? 'rgba(0, 255, 0, 0.3)' : 'rgba(255, 255, 0, 0.3)';\n                const borderColor = confidence > 0.8 ? 'green' : 'yellow';\n                const labelBgColor = confidence > 0.8 ? 'green' : 'yellow';\n                \n                console.log(`Drawing box for: ${obj.label}`, {\n                  original: obj.bbox,\n                  scaled: {\n                    x1: obj.bbox.x1 * scaleX,\n                    y1: obj.bbox.y1 * scaleY,\n                    x2: obj.bbox.x2 * scaleX,\n                    y2: obj.bbox.y2 * scaleY\n                  },\n                  confidence: confidence\n                });\n                \n                return (\n                  <div\n                    key={index}\n                    style={{\n                      position: 'absolute',\n                      left: `${obj.bbox.x1 * scaleX}px`,\n                      top: `${obj.bbox.y1 * scaleY}px`,\n                      width: `${(obj.bbox.x2 - obj.bbox.x1) * scaleX}px`,\n                      height: `${(obj.bbox.y2 - obj.bbox.y1) * scaleY}px`,\n                      border: `2px solid ${borderColor}`,\n                      backgroundColor: highlightColor,\n                      pointerEvents: 'none',\n                      zIndex: 1\n                    }}\n                  >\n                    <span style={{\n                      position: 'absolute',\n                      top: '-20px',\n                      left: '0',\n                      backgroundColor: labelBgColor,\n                      color: 'white',\n                      padding: '2px 5px',\n                      fontSize: '12px',\n                      borderRadius: '3px'\n                    }}>\n                      {obj.label}\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      )}\n\n      {mediaItems.length > 0 && (\n        <div className=\"media-grid\">\n          {mediaItems.map(media => (\n            <div\n              key={media.id}\n              className={`media-item ${selectedMedia?.id === media.id ? 'selected' : ''}`}\n              onClick={() => handleMediaClick(media)}\n            >\n              {media.type === 'video' ? (\n                <video src={media.url} />\n              ) : (\n                <img src={media.url} alt=\"Uploaded\" />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst formatTime = (seconds: number): string => {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}